---
- name: 'Copy {{ item.name }} image to remote'
  copy:
    src: '../production/build'
    dest: '/home/hute/'
  when: not local

- name: 'Check if {{ item.name }} is running'
  docker_container_info:
    name: '{{ item.name }}'
  register: 'container_state'

- name: 'Remove running container'
  docker_container:
    name: '{{ item.name }}'
    state: absent
    container_default_behavior: 'compatibility'
  when: 'container_state.exists'

- name: 'Remove old image'
  docker_image:
    name: 'hute/{{ item.name }}:latest'
    state: absent

- name: 'Build image on remote'
  docker_image:
    name: 'hute/{{ item.name }}:latest'
    load_path: '/home/hute/build/{{ item.name }}.tar' # build image from archive
    source: load
    force_source: yes
    state: present
  when: not local

- name: 'Build image local'
  docker_image:
    name: 'hute/{{ item.name }}:latest'
    build:
      pull: no
      dockerfile: '{{ item.dockerfile }}'
      path: '../..'
    source: build
    state: present
  when: local

- name: 'Run container'
  docker_container:
    name: '{{ item.name }}'
    image: 'hute/{{ item.name }}:latest'
    networks_cli_compatible: true
    network_mode: default
    networks:
      - name: hute-net
    container_default_behavior: 'compatibility'
    published_ports:
      - '{{ item.port_host }}:{{ item.port_container }}'

- name: 'Ensure container is running'
  docker_container:
    name: '{{ item.name }}'
    state: "{{ item.state | default('started') }}"
    container_default_behavior: 'compatibility'
