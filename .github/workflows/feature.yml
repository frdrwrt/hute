#https://github.github.io/actions-cheat-sheet/actions-cheat-sheet.pdf

name: Test feature branch

on:
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs: 
  # codestyle:
  #   runs-on: ubuntu-latest
  #   container: 
  #     image: hute/ci-base:latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Install dependencies
  #       run: yarn
  #     - name: Build dependencies
  #       run: yarn --cwd app build
  #     - name: Run linter
  #       run: yarn lint
  #     - name: Run formatter
  #       run: yarn format

  # test-server:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: hute/ci-base:latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Install dependencies
  #       run: yarn
  #     - name: Ensure test db is running
  #       run: ansible-playbook infrastructure/local/start-test-db.yml
  #     - name: show containers
  #       run: docker ps -a
  #     - name: show networks
  #       run: docker network ls
  #     - name: connect to network
  #       run: docker network connect hute-net ${{ job.container.id }}
  #     - name: restart
  #       run: docker container start hute-db-test
  #     - name: show network of job
  #       run: docker network inspect hute-net
  #     - name: show containers
  #       run: docker ps -a
  #     - name: logs hute-db
  #       run: docker logs hute-db-test
  #     - name: show ip
  #       run: docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' hute-db-test
  #     - name: Run migrations
  #       run: yarn --cwd server run-migrations-testci
  #     - name: Run tests
  #       run: yarn --cwd server testci
    
  # build-app:
  #   needs:
  #     - codestyle
  #   runs-on: ubuntu-latest
  #   steps: 
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Docker build context 
  #       id: buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to docker hub
  #       uses: docker/login-action@v1
  #       with: 
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Build server image and push to docker hub
  #       id: docker_build
  #       uses: docker/build-push-action@v2
  #       with:
  #         push: true
  #         file: ./Dockerfile.app
  #         tags: hute/hute-app:latest

  # build-server:
  #   needs: 
  #     - test-server
  #     - codestyle
  #   runs-on: ubuntu-latest
  #   steps: 
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Docker build context 
  #       id: buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to docker hub
  #       uses: docker/login-action@v1
  #       with: 
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Build server image and push to docker hub
  #       id: docker_build
  #       uses: docker/build-push-action@v2
  #       with:
  #         push: true
  #         file: ./Dockerfile.server
  #         tags: hute/hute-server:latest

  deploy:
    # needs: 
      # - build-server
      # - build-app
    runs-on: ubuntu-latest
    container:
      image: hute/ci-base:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup ssh connection
        uses: webfactory/ssh-agent@v0.4.1
        with: 
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      # - name: Write to file
        # uses: frdrwrt/write-to-file@v1.3
        # with:
          # filepath: /github/home/.ssh/hute/id_rsa
          # content: ${{ secrets.SSH_PRIVATE_KEY }}
          # mode: 0644
      - name: run 
        run: cat /github/home/.ssh/hute/id_rsa
      - name: Deploy production
        run: ./hute deploy-production
