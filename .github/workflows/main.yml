name: Build and deploy

on:
  push:
    branches: [ env-prod ]

  workflow_dispatch:

jobs: 
  # codestyle:
  #   runs-on: ubuntu-latest
  #   container: 
  #     image: hute/ci-base:latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Install dependencies
  #       run: yarn
  #     - name: Build dependencies
  #       run: yarn --cwd app build
  #     - name: Run linter
  #       run: yarn lint
  #     - name: Run formatter
  #       run: yarn format

  # test-server:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: hute/ci-base:latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Install dependencies
  #       run: yarn
  #     - name: Ensure test db is running
  #       run: ansible-playbook infrastructure/local/docker-state.yml --extra-vars "container=db-test state=started"
  #     - name: connect to networkci
  #       run: docker network connect hute-net ${{ job.container.id }}
  #     - name: restart
  #       run: docker container start hute-db-test
  #     - name: run migrations
  #       run: yarn --cwd server run-migrations-testci
  #     - name: Run tests
  #       run: yarn --cwd server testci
    
  # build-app:
  #   needs:
  #     - codestyle
  #   runs-on: ubuntu-latest
  #   steps: 
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Create .env.prod file
  #       uses: SpicyPizza/create-envfile@v1
  #       with: 
  #         envkey_PORT: 3000
  #         envkey_SERVER_API: "https://hute.info/graphql"
  #         envkey_SERVER_API_WS: "wss://hute.info/subscriptions"
  #         envkey_SSR_SERVER_API: "http://hute-server:4000/graphql"
  #         envkey_SSR_SERVER_API_WS: "ws://hute-server:4000/subscriptions"
  #         envkey_SERVER_PORT: 4000
  #         envkey_SERVER_HOST: hute-server
  #         envkey_DB_HOST: hute-db
  #         envkey_DB_PORT: 5432
  #         envkey_DB_USER: hute
  #         envkey_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  #         envkey_DB_DATABASE: hute
  #         file_name: .env.prod
  #     - name: Docker build context 
  #       id: buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to docker hub
  #       uses: docker/login-action@v1
  #       with: 
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Build server image and push to docker hub
  #       id: docker_build
  #       uses: docker/build-push-action@v2
  #       with:
  #         push: true
  #         file: ./Dockerfile.app
  #         tags: hute/hute-app:latest

  build-server:
    needs: 
      - test-server
      - codestyle
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Replace localhost .env.prod file
        uses: bejoistic/str-replace@master
        with: 
          find: '/localhost/'
          replace: '/hute.info/'
          include: '.env.prod'
      - name: 
        uses: bejoistic/str-replace@master
        with: 
          find: 'DB_PASSWORD=hute'
          replace: 'DB_PASSWORD=${{ secrets.DB_PASSWORD }}'
          include: '.env.prod'
      - name: show env file
        run: cat .env.prod
      - name: Docker build context 
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to docker hub
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build server image and push to docker hub
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./Dockerfile.server
          tags: hute/hute-server:latest

  # deploy:
  #   needs: 
  #     - build-server
  #     - build-app
  #   runs-on: ubuntu-latest
  #   container:
  #     image: hute/ci-base:latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Setup ssh connection
  #       uses: webfactory/ssh-agent@v0.4.1
  #       with: 
  #         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
  #     - name: Deploy production
  #       run: ansible-playbook -i infrastructure/production/inventory infrastructure/production/deploy.yml
